/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.epam;

import java.io.IOException;
import java.util.stream.IntStream;

import org.apache.http.HttpEntity;
import org.apache.http.auth.AuthScope;
import org.apache.http.auth.UsernamePasswordCredentials;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.BasicCredentialsProvider;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClientBuilder;
import org.apache.http.util.EntityUtils;

public class App {
    public void run() {
        BasicCredentialsProvider creds = new BasicCredentialsProvider();
        creds.setCredentials(AuthScope.ANY, new UsernamePasswordCredentials(
                System.getProperty("username", "user"),
                System.getProperty("password", "password")));
        CloseableHttpClient httpclient = HttpClientBuilder.create()
                                                          .disableAutomaticRetries()
                                                          .addInterceptorLast(new Interceptor())
                                                          .setDefaultCredentialsProvider(creds)
                                                          .build();
        HttpGet httpGet = new HttpGet(System.getProperty("url", "https://listerine.com"));

        try (CloseableHttpResponse response1 = httpclient.execute(httpGet))
        {

            System.out.println(response1.getStatusLine());
            HttpEntity entity = response1.getEntity();
            EntityUtils.toByteArray(entity);
        }
        catch (IOException e)
        {
            e.printStackTrace();
        }
    };

    public static void main(String[] args) {
        App app = new App();
        IntStream.range(0, Integer.getInteger("iterations", 30)).forEach(iteration -> {
            System.out.println("+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++");
            System.out.println("===============================> " + iteration + " <===============================");
            System.out.println("+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++");
            app.run();
            tick();
        });
    }

    private static void tick()
    {
        try
        {
            int timeout = Integer.getInteger("timeout", 0);
            System.out.println(String.format("Waiting for %d msec", timeout));
            Thread.sleep(timeout);
        }
        catch (InterruptedException e)
        {
            e.printStackTrace();
        }
    }
}
